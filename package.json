{
  "name": "codex-copilot",
  "description": "Codex Copilot for translation support. Includes chat, comments, and inline AI text completions.",
  "version": "0.0.5",
  "publisher": "project-accelerate",
  "private": true,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/genesis-ai-dev/codex-comments-and-chat"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "Translators Copilot",
        "properties": {
          "translators-copilot.llmEndpoint": {
            "type": "string",
            "enum": [
              "http://localhost:1234/v1",
              "https://api.openai.com/v1"
            ],
            "default": "https://api.openai.com/v1",
            "description": "The endpoint for the completion API. Choose between local LLM or OpenAI endpoints. We would suggest using [LM Studio](https://lmstudio.ai) for local LLM."
          },
          "translators-copilot.api_key": {
            "type": "string",
            "default": "",
            "description": "Your own openai API key. Ignorable for local LLM."
          },
          "translators-copilot.model": {
            "type": "string",
            "enum": [
              "local",
              "gpt-3.5-turbo",
              "gpt-4",
              "gpt-4-turbo",
              "gpt-4o",
              "davinci"
            ],
            "default": "gpt-3.5-turbo",
            "description": "Model name selected for inference. Ignorable for local LLM."
          },
          "translators-copilot.max_tokens": {
            "type": "number",
            "default": 2048,
            "description": "The maximum number of output tokens for the completion API."
          },
          "translators-copilot.temperature": {
            "type": "number",
            "default": 0.2,
            "description": "The randomness level of output generation. A higher value leads to more random outputs."
          },
          "translators-copilot.main_chat_language": {
            "type": "string",
            "default": "English",
            "enum": [
              "English",
              "Spanish",
              "French",
              "German",
              "Italian",
              "Dutch",
              "Portuguese",
              "Russian",
              "Chinese",
              "Japanese",
              "Korean",
              "Arabic",
              "Turkish",
              "Vietnamese",
              "Thai",
              "Indonesian",
              "Malay",
              "Filipino",
              "Bengali",
              "Punjabi",
              "Gujarati",
              "Marathi",
              "Odia",
              "Tamil",
              "Telugu",
              "Kannada",
              "Hindi"
            ],
            "description": "The main language used for the chat interface."
          },
          "translators-copilot.chatSystemMessage": {
            "type": "string",
            "default": "This is a chat between a helpful Bible translation assistant and a Bible translator. The assistant will provide helpful answers and suggestions to the translator, often relying on the translator's current project and reference resources. The translator will ask questions and provide context to the assistant. The translator's aim is to be consistent and faithful in a fairly literalistic rendering of the source text.",
            "description": "The system message controlling the behavior of the chat system. You can customize this message to fit your needs, or ask the copilot to translate it for you into your preferred interface language."
          }
        }
      }
    ],
    "views": {
      "genesis-translator-sidebar-view": [
        {
          "type": "webview",
          "id": "genesis-translator-sidebar",
          "name": "Genesis Translator",
          "icon": "$(comment-discussion)",
          "contextualTitle": "Genesis Translator"
        }
      ],
      "comments-sidebar-view": [
        {
          "type": "webview",
          "id": "comments-sidebar",
          "name": "Comments",
          "icon": "$(note)",
          "contextualTitle": "Comments"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "genesis-translator-sidebar-view",
          "title": "Genesis Translator Bar",
          "icon": "$(comment-discussion)"
        },
        {
          "id": "comments-sidebar-view",
          "title": "Comments",
          "icon": "$(note)"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "setupLocalEnvironment",
        "title": "Set up Translator's Copilot",
        "description": "A simple walkthrough to help you set up a large language model on your device to benefit from the Copilot feature.",
        "steps": [
          {
            "id": "downloadLMStudio",
            "title": "Download LM Studio",
            "description": "Download LM Studio to get a local LLM running to power your Translator's Copilot.\n\n[Download LM Studio](https://lmstudio.ai)",
            "media": {
              "image": "./src/media/lmstudio.gif",
              "altText": "LM Studio"
            }
          },
          {
            "id": "downloadModel",
            "title": "Download Model",
            "media": {
              "image": "./src/media/download-model.png",
              "altText": "Download Model"
            },
            "description": "Download the model you want to use for your Copilot. Not sure which one to try? Try searching LM Studio for `TheBloke/neural-chat-7B-v3-1-GGUF` (note the specific file you want is the `neural-chat-7b-v3-1.Q4_K_S.gguf` variant)."
          },
          {
            "id": "loadModel",
            "title": "Initialize Downloaded Model",
            "media": {
              "image": "./src/media/load-model.png",
              "altText": "Load Model"
            },
            "description": "Load the model you want to use for your Copilot. Click on the model dropdown at the top-center of the LM Studio screen, then select the model you downloaded (e.g., `neural-chat-7b-v3-1.Q4_K_S.gguf`)."
          },
          {
            "id": "startLocalServer",
            "title": "Start AI Model",
            "media": {
              "image": "./src/media/start-server.png",
              "altText": "Start AI Model"
            },
            "description": "Make the AI model you downloaded accessible by the Translator's Copilot by clicking on the green play 'Start Server' button in LM Studio."
          },
          {
            "id": "tryChatting",
            "title": "Try Chatting with the Translator's Copilot",
            "media": {
              "image": "./src/media/try-chatting.png",
              "altText": "Try Chatting"
            },
            "description": "Try chatting with the Translator's Copilot by clicking on the chat button in the sidebar, then clicking on the 'Chat' button in the top-right of the chat window."
          },
          {
            "id": "tryInlineCompletions",
            "title": "Try Inline Completions",
            "media": {
              "image": "./src/media/inline-completions.png",
              "altText": "Try Inline Completions"
            },
            "description": "Try inline completions with the Translator's Copilot by clicking on the chat button in the sidebar, then clicking on the 'Chat' button in the top-right of the chat window."
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "codex-chat-and-comments.createFiles",
        "title": "Create data files"
      },
      {
        "command": "commentsExtension.createNote",
        "title": "Create Note",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "commentsExtension.replyNote",
        "title": "Reply",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "commentsExtension.editNote",
        "title": "Edit",
        "icon": {
          "dark": "$(edit)",
          "light": "$(edit)"
        }
      },
      {
        "command": "commentsExtension.deleteNote",
        "title": "Delete",
        "icon": {
          "dark": "$(trash)",
          "light": "$(trash)"
        }
      },
      {
        "command": "commentsExtension.deleteNoteComment",
        "title": "Delete",
        "icon": {
          "dark": "$(close)",
          "light": "$(close)"
        }
      },
      {
        "command": "commentsExtension.saveNote",
        "title": "Save"
      },
      {
        "command": "commentsExtension.cancelSaveNote",
        "title": "Cancel"
      },
      {
        "command": "commentsExtension.dispose",
        "title": "Remove All Notes"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "commentsExtension.createNote",
          "when": "false"
        },
        {
          "command": "commentsExtension.replyNote",
          "when": "false"
        },
        {
          "command": "commentsExtension.deleteNote",
          "when": "false"
        },
        {
          "command": "commentsExtension.deleteNoteComment",
          "when": "false"
        }
      ],
      "comments/commentThread/title": [
        {
          "command": "commentsExtension.deleteNote",
          "group": "navigation",
          "when": "commentController == comment-project && !commentThreadIsEmpty"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "commentsExtension.createNote",
          "group": "inline",
          "when": "commentController == comment-project && commentThreadIsEmpty"
        },
        {
          "command": "commentsExtension.replyNote",
          "group": "inline",
          "when": "commentController == comment-project && !commentThreadIsEmpty"
        }
      ],
      "comments/comment/title": [
        {
          "command": "commentsExtension.editNote",
          "group": "group@1",
          "when": "commentController == comment-project"
        },
        {
          "command": "commentsExtension.deleteNoteComment",
          "group": "group@2",
          "when": "commentController == comment-project && comment == canDelete"
        }
      ],
      "comments/comment/context": [
        {
          "command": "commentsExtension.cancelSaveNote",
          "group": "inline@1",
          "when": "commentController == comment-project"
        },
        {
          "command": "commentsExtension.saveNote",
          "group": "inline@2",
          "when": "commentController == comment-project"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint \"src/**/*.ts\"",
    "watch": "tsc -w -p ./"
  },
  "devDependencies": {
    "@types/node": "^20.11.25",
    "@types/uuid": "^9.0.7",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "eslint": "^8.32.0",
    "typescript": "^5.3.2"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.35",
    "@vscode/test-electron": "^2.3.10",
    "codex-types": "^0.0.2",
    "path": "^0.12.7"
  },
  "extensionDependencies": [
    "project-accelerate.shared-state-store",
    "project-accelerate.codex-editor-extension"
  ]
}
